# Generated by Django 5.2.6 on 2025-09-16 05:48

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import roulettes.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('participants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Roulette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Nombre descriptivo de la ruleta', max_length=150, verbose_name='Título de la Ruleta')),
                ('slug', models.SlugField(blank=True, max_length=160, unique=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Descripción detallada de la ruleta. Puedes usar negrita, enlaces, imágenes, listas, etc. (Editor enriquecido disponible)', verbose_name='Descripción')),
                ('cover_image', models.ImageField(blank=True, help_text='Imagen principal que representa la ruleta (recomendado: 800x400px)', null=True, upload_to=roulettes.models.roulette_cover_upload_path, verbose_name='Imagen de Portada')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('active', 'Activa'), ('scheduled', 'Programada'), ('completed', 'Completada'), ('cancelled', 'Cancelada')], db_index=True, default='draft', help_text='Estado actual de la ruleta', max_length=12, verbose_name='Estado')),
                ('participation_start', models.DateTimeField(blank=True, help_text='Fecha y hora desde cuando los usuarios pueden participar', null=True, verbose_name='Inicio de Participación')),
                ('participation_end', models.DateTimeField(blank=True, help_text='Fecha y hora límite para participar', null=True, verbose_name='Fin de Participación')),
                ('scheduled_date', models.DateTimeField(blank=True, db_index=True, help_text='Fecha y hora exacta del sorteo automático', null=True, verbose_name='Fecha Programada del Sorteo')),
                ('drawn_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Sorteado en')),
                ('is_drawn', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roulettes_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('drawn_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roulettes_drawn', to=settings.AUTH_USER_MODEL, verbose_name='Sorteado por')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_roulettes', to='participants.participation', verbose_name='Ganador')),
            ],
            options={
                'verbose_name': 'Ruleta',
                'verbose_name_plural': 'Ruletas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DrawHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draw_type', models.CharField(choices=[('manual', 'Manual'), ('scheduled', 'Programado'), ('auto', 'Automático'), ('admin', 'Admin')], default='manual', max_length=20)),
                ('drawn_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('participants_count', models.PositiveIntegerField(default=0)),
                ('random_seed', models.CharField(blank=True, default='', max_length=64)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, default='')),
                ('drawn_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='draws_made', to=settings.AUTH_USER_MODEL)),
                ('winner_selected', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='draw_history', to='participants.participation')),
                ('roulette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='draw_history', to='roulettes.roulette')),
            ],
            options={
                'verbose_name': 'Historial de Sorteo',
                'verbose_name_plural': 'Historial de Sorteos',
                'ordering': ['-drawn_at'],
            },
        ),
        migrations.CreateModel(
            name='RoulettePrize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=120, verbose_name='Nombre del Premio')),
                ('description', models.TextField(blank=True, default='', help_text='Descripción detallada del premio', verbose_name='Descripción del Premio')),
                ('image', models.ImageField(blank=True, help_text='Foto del premio (recomendado: 400x400px)', null=True, upload_to=roulettes.models.prize_image_upload_path, verbose_name='Imagen del Premio')),
                ('stock', models.PositiveIntegerField(default=1, help_text='Cantidad disponible de este premio', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock disponible')),
                ('probability', models.DecimalField(decimal_places=2, default=0, help_text='Probabilidad 0-100% (opcional)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Probabilidad')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Orden en que se muestra el premio (menor número = primero)', verbose_name='Orden de visualización')),
                ('is_active', models.BooleanField(default=True, help_text='Si está disponible para ser ganado', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('roulette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='roulettes.roulette')),
            ],
            options={
                'verbose_name': 'Premio de Ruleta',
                'verbose_name_plural': 'Premios de Ruleta',
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RouletteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_participants', models.PositiveIntegerField(default=0, help_text='0 = sin límite', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Máximo de participantes')),
                ('allow_multiple_entries', models.BooleanField(default=False, help_text='Permite que el mismo usuario participe varias veces', verbose_name='Permitir múltiples participaciones')),
                ('auto_draw_when_full', models.BooleanField(default=False, help_text='Ejecutar sorteo automático cuando se alcance el límite de participantes', verbose_name='Sortear automáticamente al llenarse')),
                ('show_countdown', models.BooleanField(default=True, help_text='Mostrar cuenta regresiva para el sorteo', verbose_name='Mostrar cronómetro')),
                ('notify_on_participation', models.BooleanField(default=True, verbose_name='Notificar nuevas participaciones')),
                ('notify_on_draw', models.BooleanField(default=True, verbose_name='Notificar resultado del sorteo')),
                ('roulette', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='roulettes.roulette')),
            ],
        ),
        migrations.AddIndex(
            model_name='roulette',
            index=models.Index(fields=['status', 'is_drawn'], name='roulettes_r_status_b6f6b2_idx'),
        ),
        migrations.AddIndex(
            model_name='roulette',
            index=models.Index(fields=['scheduled_date', 'status'], name='roulettes_r_schedul_016253_idx'),
        ),
        migrations.AddIndex(
            model_name='roulette',
            index=models.Index(fields=['participation_start', 'participation_end'], name='roulettes_r_partici_2d3ec8_idx'),
        ),
        migrations.AddIndex(
            model_name='rouletteprize',
            index=models.Index(fields=['roulette', 'is_active'], name='roulettes_r_roulett_f8598a_idx'),
        ),
        migrations.AddIndex(
            model_name='rouletteprize',
            index=models.Index(fields=['display_order'], name='roulettes_r_display_3bde31_idx'),
        ),
    ]
