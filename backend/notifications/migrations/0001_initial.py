# Generated by Django 5.2.6 on 2025-09-16 05:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('participation_confirmed', 'Participación Confirmada'), ('roulette_winner', 'Ganador de Ruleta'), ('roulette_started', 'Sorteo Iniciado'), ('roulette_ending_soon', 'Sorteo Próximo a Terminar'), ('winner_notification', 'Notificación Personal de Victoria'), ('admin_winner_alert', 'Alerta de Ganador (Admin)'), ('welcome_message', 'Mensaje de Bienvenida')], max_length=30)),
                ('title_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
            },
        ),
        migrations.CreateModel(
            name='AdminNotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_on_winner', models.BooleanField(default=True, help_text='Recibir notificación cuando hay un ganador')),
                ('notify_on_new_participation', models.BooleanField(default=False, help_text='Recibir notificación en cada nueva participación')),
                ('notify_on_roulette_created', models.BooleanField(default=True, help_text='Recibir notificación cuando se crea una nueva ruleta')),
                ('email_notifications', models.BooleanField(default=False, help_text='Enviar también por email')),
                ('min_participants_alert', models.PositiveIntegerField(default=10, help_text='Alertar solo si la ruleta tiene este mínimo de participantes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='RealTimeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(help_text='Nombre del canal WebSocket', max_length=100)),
                ('message_type', models.CharField(help_text='Tipo de mensaje en tiempo real', max_length=50)),
                ('content', models.JSONField(help_text='Contenido del mensaje')),
                ('roulette_id', models.PositiveIntegerField(blank=True, help_text='ID de la ruleta relacionada', null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'realtime_messages',
                'ordering': ['-sent_at'],
                'indexes': [models.Index(fields=['channel_name', 'sent_at'], name='realtime_me_channel_3c2084_idx'), models.Index(fields=['roulette_id', 'sent_at'], name='realtime_me_roulett_7eeab0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('participation_confirmed', 'Participación Confirmada'), ('roulette_winner', 'Ganador de Ruleta'), ('roulette_started', 'Sorteo Iniciado'), ('roulette_ending_soon', 'Sorteo Próximo a Terminar'), ('winner_notification', 'Notificación Personal de Victoria'), ('admin_winner_alert', 'Alerta de Ganador (Admin)'), ('welcome_message', 'Mensaje de Bienvenida')], help_text='Tipo de notificación', max_length=30)),
                ('title', models.CharField(help_text='Título de la notificación', max_length=200)),
                ('message', models.TextField(help_text='Contenido del mensaje')),
                ('is_public', models.BooleanField(default=False, help_text='Si es True, la notificación es visible para todos los usuarios')),
                ('is_read', models.BooleanField(default=False, help_text='Indica si la notificación ha sido leída')),
                ('is_admin_only', models.BooleanField(default=False, help_text='Si es True, solo visible para administradores')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', help_text='Prioridad de la notificación', max_length=10)),
                ('roulette_id', models.PositiveIntegerField(blank=True, help_text='ID de la ruleta relacionada', null=True)),
                ('participation_id', models.PositiveIntegerField(blank=True, help_text='ID de la participación relacionada', null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict, help_text='Datos adicionales de la notificación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Fecha de expiración de la notificación', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='Usuario destinatario (null para notificaciones públicas)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read'], name='notificatio_user_id_a4dd5c_idx'), models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_4b40ec_idx'), models.Index(fields=['is_public', 'created_at'], name='notificatio_is_publ_def553_idx'), models.Index(fields=['is_admin_only', 'created_at'], name='notificatio_is_admi_5f4e85_idx'), models.Index(fields=['roulette_id'], name='notificatio_roulett_dd8f81_idx'), models.Index(fields=['priority', 'is_read'], name='notificatio_priorit_95c9c5_idx')],
            },
        ),
    ]
