# syntax=docker/dockerfile:1.7

######## Build stage ########
FROM python:3.11-slim AS build
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc python3-dev libpq-dev libjpeg-dev zlib1g-dev \
  && rm -rf /var/lib/apt/lists/*

COPY requirements.txt ./
RUN --mount=type=cache,target=/root/.cache/pip \
    pip wheel --wheel-dir /wheels -r requirements.txt

######## Runtime stage ########
FROM python:3.11-slim AS runtime
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

WORKDIR /app

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 libjpeg62-turbo zlib1g \
  && rm -rf /var/lib/apt/lists/*

# Instalar paquetes Python
COPY --from=build /wheels /wheels
RUN pip install --no-cache-dir /wheels/*

# Copiar código de la aplicación
COPY . .

# Crear directorios necesarios
RUN mkdir -p /app/logs /app/media /app/staticfiles

EXPOSE 8000

# Desarrollo: usar runserver
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]

# Producción: descomentar esto y comentar la línea anterior
# CMD ["gunicorn", "backend.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3"]